name: Release and Deploy to Prod

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - id: drafter
        uses: release-drafter/release-drafter@v6
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: get_tag
        run: |
          if [ -n "${{ steps.drafter.outputs.tag_name }}" ]; then
            echo "tag=${{ steps.drafter.outputs.tag_name }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi
      
  build_push_prod:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.release_tag }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ needs.release.outputs.release_tag }}
        run: |
          docker build -t api:latest         ./apps/api        -f apps/api/Containerfile
          docker build -t web-server:latest  ./apps/web-server -f apps/web-server/Containerfile
          docker tag api:latest         $ECR_REGISTRY/api:$TAG
          docker tag web-server:latest  $ECR_REGISTRY/web-server:$TAG
          docker push $ECR_REGISTRY/api:$TAG
          docker push $ECR_REGISTRY/web-server:$TAG
